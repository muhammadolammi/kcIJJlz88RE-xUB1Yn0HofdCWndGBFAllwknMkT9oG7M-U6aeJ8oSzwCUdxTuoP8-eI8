name: PostgreSQL Backup

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at 2 AM UTC
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    env:
     gpgkey: ${{secrets.GPG_KEY}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - run: |
          mkdir secrets
          gpg --quiet --batch --yes --decrypt --passphrase="$gpgkey" --output secrets/key.pem key.pem.gpg
          chmod 600 "secrets/key.pem"
          
      
     
      - name: SET version to gitenv
        run: echo "backupversion=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    
     
      - name: CREATE A BACKUP 
        run: |
          ssh -o StrictHostKeyChecking=No -tt -i "secrets/key.pem" ${{secrets.SERVER_USER}}@'${{secrets.SERVER_IP}}' '  docker exec db pg_dump  -U postgres  muhammaddev  >> ~/backups/${{env.backupversion}}.sql || true'

      - name: COPY BACKUP
        run: |
            scp -o StrictHostKeyChecking=No -i "secrets/key.pem" ${{secrets.SERVER_USER}}@${{secrets.SERVER_IP}}:~/backups/${{env.backupversion}}.sql ./backups/



      - name: Commit and push backup
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add backups/${{env.backupversion}}.sql
          git commit -m "Database backup for $(date +'%F') version ${{env.backupversion}}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Delete the backup
        run: |
            ssh -o StrictHostKeyChecking=No -tt -i "secrets/key.pem" ${{secrets.SERVER_USER}}@'${{secrets.SERVER_IP}}' '  rm  ~/backups/${{env.backupversion}}.sql || true'
  


